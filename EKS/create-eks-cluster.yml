Description: >
    Erick Dimistracopulos
    Creates a EKS cluster with CloudFormation
Parameters:
    securityGroupID:
        Description: Security Group ID
        Type: String
    subnetID1:
        Description: Subnet ID 1
        Type: String
    subnetID2:
        Description: Subnet ID 2
        Type: String
    clusterName:
        Description: Name of the Cluster
        Type: String
Resources:
  NodeInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
  eksClusterRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - eks.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
  eksCluster:
    Type: 'AWS::EKS::Cluster'
    DependsOn: eksClusterRole
    Properties:
      Name: !Ref clusterName
      Version: '1.17'
      RoleArn: !GetAtt eksClusterRole.Arn
      ResourcesVpcConfig:
        SecurityGroupIds:
          - !Ref securityGroupID
        SubnetIds:
          - !Ref subnetID1
          - !Ref subnetID2
  EKSNodegroup:
    Type: 'AWS::EKS::Nodegroup'
    Properties:
      ClusterName: !Ref clusterName
      NodeRole: !GetAtt NodeInstanceRole.Arn
      ScalingConfig:
        MinSize: 2
        DesiredSize: 3
        MaxSize: 5
      Subnets:
        - !Ref subnetID1
        - !Ref subnetID2